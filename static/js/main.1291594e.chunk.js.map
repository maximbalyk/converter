{"version":3,"sources":["component/CurrencyInput/CurrencyInput.tsx","component/CurrencyConvertor/CurrencyConverter.tsx","component/CurrencyList/CurrencyList.tsx","App.tsx","index.tsx"],"names":["CurrencyInput","amount","currency","currencies","onAmountChange","onCurrencyChange","className","type","value","onChange","e","target","map","currencyForList","CurrencyConverter","useState","amount1","setAmount1","amount2","setAmount2","currency1","setCurrency1","currency2","setCurrency2","UAH","rates","setRates","format","number","toFixed","handleAmount1Change","amountFirst","useEffect","axios","get","then","response","data","Object","keys","currencyFirst","amountSecond","currencySecond","CurrencyList","CAD","ratesInitial","setRatesInitial","CHF","ratesList","setRatesList","newObj","forEach","key","newValue","currencyChange","entries","cur","Math","random","toString","App","to","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1291594e.chunk.js","sourcesContent":["import React from 'react';\nimport './currencyInput.scss';\n\ninterface Props {\n  amount: number|string,\n  currency: string,\n  currencies: string[],\n  onAmountChange(prop: number|string): void,\n  onCurrencyChange(prop: string): void,\n}\n\nconst CurrencyInput = ({\n  amount,\n  currency,\n  currencies,\n  onAmountChange,\n  onCurrencyChange,\n} : Props) => {\n  return (\n    <div className=\"group\">\n      <input\n        type=\"number\"\n        value={amount}\n        onChange={e => onAmountChange(e.target.value)}\n      />\n      <select\n        value={currency}\n        onChange={e => onCurrencyChange(e.target.value)}\n      >\n        {currencies.map((currencyForList: string) => (\n          <option value={currencyForList} key={currencyForList}>{currencyForList}</option>\n        ))}\n      </select>\n    </div>\n  );\n};\n\nexport default CurrencyInput;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Rates } from '../../interfaces/rates';\nimport CurrencyInput from '../CurrencyInput/CurrencyInput';\n\nexport const CurrencyConverter: React.FC = () => {\n  const [amount1, setAmount1] = useState<string | number>(1);\n  const [amount2, setAmount2] = useState<string | number>(1);\n  const [currency1, setCurrency1] = useState<string>('CAD');\n  const [currency2, setCurrency2] = useState<string>('CHF');\n  const [rates, setRates] = useState<Rates>({ UAH: 1 });\n\n  const format = (number: number): string => {\n    return number.toFixed(2);\n  };\n\n  const handleAmount1Change = (amountFirst: number): void => {\n    setAmount2(format((+amountFirst * rates[currency2]) / rates[currency1]));\n    setAmount1(amountFirst);\n  };\n\n  const handleCurrency1Change = (currencyFirst: string): void => {\n    setAmount2(format((+amount1 * rates[currency2]) / rates[currencyFirst]));\n    setCurrency1(currencyFirst);\n  };\n\n  const handleAmount2Change = (amountSecond: number): void => {\n    setAmount1(format((+amountSecond * rates[currency1]) / rates[currency2]));\n    setAmount2(amountSecond);\n  };\n\n  const handleCurrency2Change = (currencySecond: string): void => {\n    setAmount1(format((+amount2 * rates[currency1]) / rates[currencySecond]));\n    setCurrency2(currencySecond);\n  };\n\n  useEffect(() => {\n    axios.get('https://freecurrencyapi.net/api/v2/latest?apikey=1a1622c0-89a1-11ec-acef-312b1abd7534')\n      .then(response => {\n        setRates(response.data.data);\n      });\n\n    if (rates) {\n      handleAmount1Change(1);\n    }\n  }, [rates]);\n\n  return (\n    <>\n      <CurrencyInput\n        currencies={Object.keys(rates)}\n        amount={amount1}\n        currency={currency1}\n        onAmountChange={handleAmount1Change}\n        onCurrencyChange={handleCurrency1Change}\n      />\n      <CurrencyInput\n        currencies={Object.keys(rates)}\n        amount={amount2}\n        currency={currency2}\n        onAmountChange={handleAmount2Change}\n        onCurrencyChange={handleCurrency2Change}\n      />\n    </>\n  );\n};\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { Rates } from '../../interfaces/rates';\nimport './CurrencyList.scss';\n\nconst CurrencyList = () => {\n  const [currency1, setCurrency1] = useState<string>('CAD');\n  const [ratesInitial, setRatesInitial] = useState<Rates>({ CAD: 1 });\n  const [ratesList, setRatesList] = useState<Rates>({ CHF: 1 });\n\n  const currencyChange = (currency: string): void => {\n    let newObj = {};\n\n    Object.keys(ratesInitial).forEach((key) => {\n      const newValue = ratesInitial[key] / ratesInitial[currency];\n\n      newObj = {\n        ...newObj,\n        [key]: newValue,\n      };\n    });\n\n    setRatesList(newObj);\n  };\n\n  useEffect(() => {\n    axios.get('https://freecurrencyapi.net/api/v2/latest?apikey=1a1622c0-89a1-11ec-acef-312b1abd7534')\n      .then(response => {\n        setRatesInitial(response.data.data);\n        setRatesList(response.data.data);\n      });\n  }, []);\n\n  return (\n    <>\n      <div className=\"content-list\">\n        <select\n          className=\"selector\"\n          value={currency1}\n          onChange={e => {\n            setCurrency1(e.target.value);\n            currencyChange(e.target.value);\n          }}\n        >\n          {Object.keys(ratesInitial).map((currencyForList: string) => (\n            <option value={currencyForList} key={currencyForList}>{currencyForList}</option>\n          ))}\n        </select>\n\n        <div className=\"list\">\n          {Object.entries(ratesList).map((cur) => (\n            <div\n              className=\"item\"\n              key={Math.random().toString()}\n            >\n              {cur[1].toFixed(2)}\n              {' '}\n              {cur[0]}\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default CurrencyList;\n","import React from 'react';\n\nimport './App.scss';\nimport { Link, Route, Routes } from 'react-router-dom';\nimport { CurrencyConverter } from './component/CurrencyConvertor/CurrencyConverter';\nimport CurrencyList from './component/CurrencyList/CurrencyList';\n\ninterface Props {\n  onClick: () => void;\n}\n\nexport const Provider: React.FC<Props> = React.memo(\n  ({ onClick, children }) => (\n    <button\n      type=\"button\"\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  ),\n);\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <div className=\"content\">\n        <div className=\"switcher\">\n          <Link className=\"link\" to=\"/\">Currency converter</Link>\n          <Link className=\"link\" to=\"/currency-list\">Currency list</Link>\n        </div>\n\n        <div className=\"pages\">\n          <Routes>\n            <Route path=\"/\" element={<CurrencyConverter />} />\n            <Route path=\"/currency-list\" element={<CurrencyList />} />\n          </Routes>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}